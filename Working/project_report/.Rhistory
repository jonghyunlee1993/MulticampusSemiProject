geom_polygon(data = converted, aes(x = long, y = lat, group = group), alpha = 0.6, fill='lightblue') +
geom_point(data = departments, aes(colour = 회사명), size = 4, alpha = 0.5) +
# scale_color_discrete(breaks = c("롯데", "현대", "신세계")) +
scale_colour_manual(values = c("롯데" = 'red', "현대" = "blue", "신세계" = 'yellow')) +
ggtitle("분석 대상 서울 소재 백화점") +
labs(x = "경도", y = "위도") +
# geom_text(data = departments, aes(label = name)) +
theme(plot.title = theme.ti,
axis.title = theme.ax,
legend.title = theme.leti,
legend.text = theme.lete,
legend.position = c(0.88, 0.16))
library(ggplot2)
library(dplyr)
path_meta = "~/GitRepo/Multicampus_semi/JH_working/data/"
path_res = "~/GitRepo/Multicampus_semi/JH_working/proc/"
# load pop_data
pop = read.csv(paste0(path_res, "local_pop_weekend.csv"), stringsAsFactors = F)[, -1]
pop[pop == "*"] = NA
pop[, 5:length(pop)] = apply(pop[, 5:length(pop)], 2, as.integer)
# mean visit pop의 sd가 500이 넘어가는 백화점 두 곳 제외
# 현대 신촌점, 롯데 관악점
pop_df = pop %>% group_by(date, 집계구) %>%
summarise(mean_pop = mean(총생활인구)) %>%
rename(code = 집계구) %>%
filter(!code %in% c(1113075030009, 1121052010001))
ggplot(data = x, aes(x = mean_pop)) +
geom_histogram()
rm(x)
X = pop_df[pop_df$code == 1113075030009, ]
ggplot(data = X, aes(x = mean_pop)) +
geom_histogram()
pop_df[pop_df$code == 1113075030009, ]
pop_df[pop_df$code == 1113075030009, ]
# mean visit pop의 sd가 500이 넘어가는 백화점 두 곳 제외
# 현대 신촌점, 롯데 관악점
pop_df = pop %>% group_by(date, 집계구) %>%
summarise(mean_pop = mean(총생활인구)) %>%
rename(code = 집계구)
X = pop_df[pop_df$code == 1113075030009, ]
ggplot(data = X, aes(x = mean_pop)) +
geom_histogram()
ggplot(data = X, aes(x = mean_pop)) +
geom_histogram() +
ggtitle("집계구 신촌")
ggplot(data = X, aes(x = mean_pop)) +
geom_histogram() +
ggtitle("집계구 신촌") +
labs(x = "일평균 생활 인구 수", y = "횟수")
ggplot(data = X, aes(x = mean_pop)) +
geom_histogram() +
ggtitle("집계구 신촌") +
labs(x = "일평균 생활인구", y = "횟수")
ggplot(data = X, aes(x = mean_pop)) +
geom_histogram() +
ggtitle(paste("집계구", 1113075030009,"신촌")) +
labs(x = "일평균 생활인구", y = "횟수")
ggplot(data = X, aes(x = mean_pop)) +
geom_histogram(fill="#F8766D", colour="black", binwidth = 0.5) +
ggtitle(paste("집계구", 1113075030009,"신촌")) +
labs(x = "일평균 생활인구", y = "횟수")
ggplot(data = X, aes(x = mean_pop)) +
geom_histogram(fill="#F8766D", colour="black") +
ggtitle(paste("집계구", 1113075030009,"신촌")) +
labs(x = "일평균 생활인구", y = "횟수")
ggplot(data = X, aes(x = mean_pop)) +
geom_histogram(fill="lightblue", colour="black") +
ggtitle(paste("집계구", 1113075030009,"신촌")) +
labs(x = "일평균 생활인구", y = "횟수")
hist(pop_df[pop_df$code == 1123063020012, ]$mean_pop)
X = pop_df[pop_df$code == 1123063020012, ]
ggplot(data = X, aes(x = mean_pop)) +
geom_histogram(fill="lightblue", colour="black") +
ggtitle(paste("집계구", 1123063020012,"관악")) +
labs(x = "일평균 생활인구", y = "횟수")
theme.ti <- element_text(family="NanumGothic", face="bold", size=12) #그래프 제목 스타일 변경
theme.ax <- element_text(family="NanumGothic", face="bold", size=10, angle=00, hjust=0.54, vjust=0.5) #그래프 축 이름 스타일 변경
X = pop_df[pop_df$code == 1113075030009, ]
ggplot(data = X, aes(x = mean_pop)) +
geom_histogram(fill="lightblue", colour="black") +
ggtitle(paste("집계구", 1113075030009,"신촌")) +
labs(x = "일평균 생활인구", y = "횟수") +
theme(lot.title = theme.ti,
axis.title = theme.ax)
ggplot(data = X, aes(x = mean_pop)) +
geom_histogram(fill="lightblue", colour="black") +
ggtitle(paste("집계구", 1113075030009,"신촌")) +
labs(x = "일평균 생활인구", y = "횟수") +
theme(plot.title = theme.ti,
axis.title = theme.ax)
X = pop_df[pop_df$code == 1113075030009, ]
ggplot(data = X, aes(x = mean_pop)) +
geom_histogram(fill="lightblue", colour="black") +
ggtitle(paste("집계구", 1113075030009,"신촌")) +
labs(x = "일평균 생활인구", y = "횟수") +
theme(plot.title = theme.ti,
axis.title = theme.ax)
X = pop_df[pop_df$code == 1123063020012, ]
ggplot(data = X, aes(x = mean_pop)) +
geom_histogram(fill="lightblue", colour="black") +
ggtitle(paste("집계구", 1123063020012,"관악")) +
labs(x = "일평균 생활인구", y = "횟수") +
theme(plot.title = theme.ti,
axis.title = theme.ax)
sd(pop_df[pop_df$code == 1123063020012, ]$mean_pop)
sd(pop_df[pop_df$code == 1121052010001, ]$mean_pop)
X = pop_df[pop_df$code == 1121052010001, ]
ggplot(data = X, aes(x = mean_pop)) +
geom_histogram(fill="lightblue", colour="black") +
ggtitle(paste("집계구", 1121052010001,"관악")) +
labs(x = "일평균 생활인구", y = "횟수") +
theme(plot.title = theme.ti,
axis.title = theme.ax)
unique(pop_df$code)
options(scipen = 100)
unique(pop_df$code)
### not noise
X = pop_df[pop_df$code == 1108068010002, ]
ggplot(data = X, aes(x = mean_pop)) +
geom_histogram(fill="lightblue", colour="black") +
ggtitle(paste("집계구", 1108068010002,"관악")) +
labs(x = "일평균 생활인구", y = "횟수") +
theme(plot.title = theme.ti,
axis.title = theme.ax)
### not noise
X = pop_df[pop_df$code == 1123058040001, ]
ggplot(data = X, aes(x = mean_pop)) +
geom_histogram(fill="lightblue", colour="black") +
ggtitle(paste("집계구", 1123058040001,"관악")) +
labs(x = "일평균 생활인구", y = "횟수") +
theme(plot.title = theme.ti,
axis.title = theme.ax)
### not noise
X = pop_df[pop_df$code == 1119074050006, ]
ggplot(data = X, aes(x = mean_pop)) +
geom_histogram(fill="lightblue", colour="black") +
ggtitle(paste("집계구", 1119074050006,"관악")) +
labs(x = "일평균 생활인구", y = "횟수") +
theme(plot.title = theme.ti,
axis.title = theme.ax)
X = pop_df[pop_df$code == 1121052010001, ]
ggplot(data = X, aes(x = mean_pop)) +
geom_histogram(fill="lightblue", colour="black") +
ggtitle(paste("집계구", 1121052010001,"관악")) +
labs(x = "일평균 생활인구", y = "횟수") +
theme(plot.title = theme.ti,
axis.title = theme.ax)
ggplot(data = X, aes(x = mean_pop)) +
geom_histogram(fill="lightblue", colour="black", bins = 10) +
ggtitle(paste("집계구", 1121052010001,"관악")) +
labs(x = "일평균 생활인구", y = "횟수") +
theme(plot.title = theme.ti,
axis.title = theme.ax)
ggplot(data = X, aes(x = mean_pop)) +
geom_histogram(fill="lightblue", colour="black", bins = 15) +
ggtitle(paste("집계구", 1121052010001,"관악")) +
labs(x = "일평균 생활인구", y = "횟수") +
theme(plot.title = theme.ti,
axis.title = theme.ax)
ggplot(data = X, aes(x = mean_pop)) +
geom_histogram(fill="lightblue", colour="black", bins = 10) +
ggtitle(paste("집계구", 1121052010001,"관악")) +
labs(x = "일평균 생활인구", y = "횟수") +
theme(plot.title = theme.ti,
axis.title = theme.ax)
ggplot(data = X, aes(x = mean_pop)) +
geom_histogram(fill="lightblue", colour="black", bins = 10) +
ggtitle(paste("집계구", 1113075030009,"신촌")) +
labs(x = "일평균 생활인구", y = "횟수") +
theme(plot.title = theme.ti,
axis.title = theme.ax)
X = pop_df[pop_df$code == 1113075030009, ]
ggplot(data = X, aes(x = mean_pop)) +
geom_histogram(fill="lightblue", colour="black", bins = 10) +
ggtitle(paste("집계구", 1113075030009,"신촌")) +
labs(x = "일평균 생활인구", y = "횟수") +
theme(plot.title = theme.ti,
axis.title = theme.ax)
ggplot(data = X, aes(x = mean_pop)) +
geom_histogram(fill="lightblue", colour="black", bins = 10) +
ggtitle(paste("집계구", 1119074050006,"관악")) +
labs(x = "일평균 생활인구", y = "횟수") +
theme(plot.title = theme.ti,
axis.title = theme.ax)
### not noise
X = pop_df[pop_df$code == 1119074050006, ]
ggplot(data = X, aes(x = mean_pop)) +
geom_histogram(fill="lightblue", colour="black", bins = 10) +
ggtitle(paste("집계구", 1119074050006,"관악")) +
labs(x = "일평균 생활인구", y = "횟수") +
theme(plot.title = theme.ti,
axis.title = theme.ax)
read.csv("~/GitRepo/Multicampus_semi/JH_working/data")
dpartment = read.csv("~/GitRepo/Multicampus_semi/JH_working/data/department.csv")
dpartment = read.csv("~/GitRepo/Multicampus_semi/JH_working/data/department.csv", stringsAsFactors = F)
rm(list=ls())
rm(list = ls())
options(scipen = 100)
library(plm)
library(dplyr)
path_meta = "~/GitRepo/Multicampus_semi/JH_working/data/"
path_res = "~/GitRepo/Multicampus_semi/JH_working/proc/"
# load pop_data
pop = read.csv(paste0(path_res, "local_pop_weekend.csv"), stringsAsFactors = F)[, -1]
pop[pop == "*"] = NA
pop[, 5:length(pop)] = apply(pop[, 5:length(pop)], 2, as.integer)
# mean visit pop의 sd가 500이 넘어가는 백화점 두 곳 제외
# 현대 신촌점, 롯데 관악점
pop_df = pop %>% group_by(date, 집계구) %>%
summarise(mean_pop = mean(총생활인구)) %>%
rename(code = 집계구) %>%
filter(!code %in% c(1113075030009, 1121052010001))
# load department meta data
department = read.csv(paste0(path_meta, "department.csv"), stringsAsFactors = F)
# load subway_data
subway = read.csv(paste0(path_res, "weekend_subway.csv"), stringsAsFactors = F)[, -1]
subway = subway %>% rename(subway_code = station_no) %>%
select(-c(station_name))
# load weather dust data
weather_dust = read.csv(paste0(path_res, "weather_dust_proc.csv"), stringsAsFactors = F)[,-1]
weather_dust[is.na(weather_dust)] = 0
# joining objects
df = left_join(pop_df, department[, 1:7], by = c("code"))
df = inner_join(df, subway, by = c("date", "subway_code"))
df = inner_join(df, weather_dust, by = "date")
df_pop_weather_dust_subway = df
getwd()
save(df_pop_weather_dust_subway, paste0(path_res, "final_df_for_analysis.Rdata"))
path_res = "~/GitRepo/Multicampus_semi/JH_working/proc/"
path_res
save(df_pop_weather_dust_subway, paste0(path_res, "final_df_for_analysis.Rdata"))
save(df_pop_weather_dust_subway, file = paste0(path_res, "final_df_for_analysis.Rdata"))
load(paste0(path_res, "final_df_for_analysis.Rdata"))
df = df_pop_weather_dust_subway
rm(df_pop_weather_dust_subway)
### not noise
show_hist = function(code){
X = pop_df[pop_df$code == code, ]
ggplot(data = X, aes(x = mean_pop)) +
geom_histogram(fill = "lightblue", colour = "black", bins = 10) +
ggtitle(paste("집계구", code, department[department$code == code, ]$name)) +
labs(x = "일평균 생활인구", y = "횟수") +
theme(plot.title = theme.ti,
axis.title = theme.ax)
}
show_hist(1119074050006)
theme.ti <- element_text(family="NanumGothic", face="bold", size=12) #그래프 제목 스타일 변경
theme.ax <- element_text(family="NanumGothic", face="bold", size=10, angle=00, hjust=0.54, vjust=0.5) #그래프 축 이름 스타일 변경
# load pop_data
pop = read.csv(paste0(path_res, "local_pop_weekend.csv"), stringsAsFactors = F)[, -1]
pop[pop == "*"] = NA
pop[, 5:length(pop)] = apply(pop[, 5:length(pop)], 2, as.integer)
# mean visit pop의 sd가 500이 넘어가는 백화점 두 곳 제외
# 현대 신촌점, 롯데 관악점
pop_df = pop %>% group_by(date, 집계구) %>%
summarise(mean_pop = mean(총생활인구)) %>%
rename(code = 집계구)
show_hist(1119074050006)
print(paste("sd:", sd(X$mean_pop))
ggplot(data = X, aes(x = mean_pop)) +
geom_histogram(fill = "lightblue", colour = "black", bins = 10) +
ggtitle(paste("집계구", code, department[department$code == code, ]$name)) +
labs(x = "일평균 생활인구", y = "횟수") +
theme(plot.title = theme.ti,
axis.title = theme.ax)
}
X = pop_df[pop_df$code == 1113075030009, ]
ggplot(data = X, aes(x = mean_pop)) +
geom_histogram(fill="lightblue", colour="black", bins = 10) +
ggtitle(paste("집계구", 1113075030009,"신촌")) +
labs(x = "일평균 생활인구", y = "횟수") +
theme(plot.title = theme.ti,
axis.title = theme.ax)
sd(pop_df[pop_df$code == 1115051010002, ]$mean_pop)
hist(pop_df[pop_df$code == 1115051010002, ]$mean_pop)
sd(pop_df[pop_df$code == 1121052010001, ]$mean_pop)
hist(pop_df[pop_df$code == 1121052010001, ]$mean_pop)
X = pop_df[pop_df$code == 1121052010001, ]
ggplot(data = X, aes(x = mean_pop)) +
geom_histogram(fill="lightblue", colour="black", bins = 10) +
ggtitle(paste("집계구", 1121052010001,"관악")) +
labs(x = "일평균 생활인구", y = "횟수") +
theme(plot.title = theme.ti,
axis.title = theme.ax)
sd(pop_df[pop_df$code == 1123063020012, ]$mean_pop)
hist(pop_df[pop_df$code == 1123063020012, ]$mean_pop)
noise = c(1113075030009, 1121052010001)
show_hist(1119074050006)
show_hist = function(code){
X = pop_df[pop_df$code == code, ]
print(paste("sd:", sd(X$mean_pop)))
ggplot(data = X, aes(x = mean_pop)) +
geom_histogram(fill = "lightblue", colour = "black", bins = 10) +
ggtitle(paste("집계구", code, department[department$code == code, ]$name)) +
labs(x = "일평균 생활인구", y = "횟수") +
theme(plot.title = theme.ti,
axis.title = theme.ax)
}
show_hist(1113075030009)
show_hist(1115051010002)
show_hist(1121052010001)
#
show_hist(1123063020012)
# 영등포
show_hist(1119074050006)
# 강남(75.8955158645164)
show_hist(1123063020012)
# 관악 655.828616171027
show_hist(1121052010001)
# 목동 54.4415913196045
show_hist(1115051010002)
# 신촌 542.813973721282
show_hist(1113075030009)
# mean visit pop의 sd가 500이 넘어가는 백화점 네 곳 제외
# 현대 신촌점, 롯데 관악점, 현대 목동점, 롯데 강남점
pop_df = pop %>% group_by(date, 집계구) %>%
summarise(mean_pop = mean(총생활인구)) %>%
rename(code = 집계구) %>%
filter(!code %in% c(1113075030009, 1121052010001, 1121052010001, 1123063020012))
rm(list = ls())
path_meta = "~/GitRepo/Multicampus_semi/JH_working/data/"
path_res = "~/GitRepo/Multicampus_semi/JH_working/proc/"
# load pop_data
pop = read.csv(paste0(path_res, "local_pop_weekend.csv"), stringsAsFactors = F)[, -1]
pop[pop == "*"] = NA
pop[, 5:length(pop)] = apply(pop[, 5:length(pop)], 2, as.integer)
# mean visit pop의 sd가 500이 넘어가는 백화점 네 곳 제외
# 현대 신촌점, 롯데 관악점, 현대 목동점, 롯데 강남점
pop_df = pop %>% group_by(date, 집계구) %>%
summarise(mean_pop = mean(총생활인구)) %>%
rename(code = 집계구) %>%
filter(!code %in% c(1113075030009, 1121052010001, 1121052010001, 1123063020012))
# load department meta data
department = read.csv(paste0(path_meta, "department.csv"), stringsAsFactors = F)
# load subway_data
subway = read.csv(paste0(path_res, "weekend_subway.csv"), stringsAsFactors = F)[, -1]
subway = subway %>% rename(subway_code = station_no) %>%
select(-c(station_name))
# load weather dust data
weather_dust = read.csv(paste0(path_res, "weather_dust_proc.csv"), stringsAsFactors = F)[,-1]
weather_dust[is.na(weather_dust)] = 0
# joining objects
df = left_join(pop_df, department[, 1:7], by = c("code"))
df = inner_join(df, subway, by = c("date", "subway_code"))
df = inner_join(df, weather_dust, by = "date")
model9  = lm(mean_pop ~ size + residential_area + commercial_area + green_area +
pop_density + arrival + fine_dust + hyper_dust +
mean_precipi + mean_temp,
data = df)
step(model9, direction = "both")
model9_step = lm(formula = mean_pop ~ size + residential_area + commercial_area +
green_area + pop_density + arrival + fine_dust + mean_temp,
data = df)
summary(model9_step)
plot(model9_step)
# 영등포
show_hist(1119074050006)
rm(list = ls())
path_meta = "~/GitRepo/Multicampus_semi/JH_working/data/"
path_res = "~/GitRepo/Multicampus_semi/JH_working/proc/"
theme.ti <- element_text(family="NanumGothic", face="bold", size=12) #그래프 제목 스타일 변경
theme.ax <- element_text(family="NanumGothic", face="bold", size=10, angle=00, hjust=0.54, vjust=0.5) #그래프 축 이름 스타일 변경
theme.ti <- element_text(family="NanumGothic", face="bold", size=12)
theme.ax <- element_text(family="NanumGothic", face="bold", size=10, angle=00, hjust=0.54, vjust=0.5)
# load pop_data
pop = read.csv(paste0(path_res, "local_pop_weekend.csv"), stringsAsFactors = F)[, -1]
pop[pop == "*"] = NA
pop[, 5:length(pop)] = apply(pop[, 5:length(pop)], 2, as.integer)
# mean visit pop의 sd가 500이 넘어가는 백화점 두 곳
# 현대 신촌점, 롯데 관악점
pop_df = pop %>% group_by(date, 집계구) %>%
summarise(mean_pop = mean(총생활인구)) %>%
rename(code = 집계구)
show_hist = function(code){
X = pop_df[pop_df$code == code, ]
print(paste("sd:", sd(X$mean_pop)))
ggplot(data = X, aes(x = mean_pop)) +
geom_histogram(fill = "lightblue", colour = "black", bins = 10) +
ggtitle(paste("집계구", code, department[department$code == code, ]$name)) +
labs(x = "일평균 생활인구", y = "횟수") +
theme(plot.title = theme.ti,
axis.title = theme.ax)
}
# 신촌
show_hist(1113075030009)
# load department data
department = read.csv(paste0(path_meta , "department.csv"))
department
# 몇몇 백화점의 히스토그램이 정규 분포를 따르지 않음
pop_df = pop %>% group_by(date, 집계구) %>%
summarise(mean_pop = mean(총생활인구)) %>%
rename(code = 집계구)
show_hist = function(code){
X = pop_df[pop_df$code == code, ]
print(paste("sd:", sd(X$mean_pop)))
ggplot(data = X, aes(x = mean_pop)) +
geom_histogram(fill = "lightblue", colour = "black", bins = 10) +
ggtitle(paste("집계구", code, department[department$code == code, ]$name)) +
labs(x = "일평균 생활인구", y = "횟수") +
theme(plot.title = theme.ti,
axis.title = theme.ax)
}
# 신촌
show_hist(1113075030009)
# 목동
show_hist(1115051010002)
# 관악
show_hist(1121052010001)
# 강남
show_hist(1123063020012)
# 영등포
show_hist(1119074050006)
show_hist(dept_code)
for (dept_code in department$code){
show_hist(dept_code)
}
show_hist = function(code){
X = pop_df[pop_df$code == code, ]
# print(paste("sd:", sd(X$mean_pop)))
fig = ggplot(data = X, aes(x = mean_pop)) +
geom_histogram(fill = "lightblue", colour = "black", bins = 10) +
ggtitle(paste("집계구", code, department[department$code == code, ]$name)) +
labs(x = "일평균 생활인구", y = "횟수") +
theme(plot.title = theme.ti,
axis.title = theme.ax)
print(fig)
}
for (dept_code in department$code){
show_hist(dept_code)
}
model9_step = lm(formula = log(mean_pop) ~ size + residential_area + commercial_area +
green_area + pop_density + arrival + fine_dust + mean_temp,
data = df)
rm(list = ls())
path_meta = "~/GitRepo/Multicampus_semi/JH_working/data/"
path_res = "~/GitRepo/Multicampus_semi/JH_working/proc/"
# load pop_data
pop = read.csv(paste0(path_res, "local_pop_weekend.csv"), stringsAsFactors = F)[, -1]
pop[pop == "*"] = NA
pop[, 5:length(pop)] = apply(pop[, 5:length(pop)], 2, as.integer)
# mean visit pop의 sd가 500이 넘어가는 백화점 네 곳 제외
# 현대 신촌점, 롯데 관악점, 현대 목동점, 롯데 강남점
pop_df = pop %>% group_by(date, 집계구) %>%
summarise(mean_pop = mean(총생활인구)) %>%
rename(code = 집계구) %>%
filter(!code %in% c(1113075030009, 1121052010001, 1121052010001, 1123063020012))
# load department meta data
department = read.csv(paste0(path_meta, "department.csv"), stringsAsFactors = F)
# load subway_data
subway = read.csv(paste0(path_res, "weekend_subway.csv"), stringsAsFactors = F)[, -1]
subway = subway %>% rename(subway_code = station_no) %>%
select(-c(station_name))
# load weather dust data
weather_dust = read.csv(paste0(path_res, "weather_dust_proc.csv"), stringsAsFactors = F)[,-1]
weather_dust[is.na(weather_dust)] = 0
# joining objects
df = left_join(pop_df, department[, 1:7], by = c("code"))
df = inner_join(df, subway, by = c("date", "subway_code"))
df = inner_join(df, weather_dust, by = "date")
test = lm(log(mean_pop) ~ size + residential_area + commercial_area +
green_area + pop_density + arrival + fine_dust + mean_temp,
data = df)
summary(test)
test = lm(log(mean_pop) ~ size + residential_area + commercial_area + green_area +
pop_density + arrival + fine_dust + hyper_dust +
mean_precipi + mean_temp,
data = df)
summary(test)
test = lm(log(mean_pop) ~ size + residential_area + commercial_area + green_area +
pop_density + arrival + fine_dust + hyper_dust +
mean_precipi,
data = df)
summary(test)
test = lm(log(mean_pop) ~ size + residential_area + commercial_area + green_area +
pop_density + arrival + hyper_dust +
mean_precipi,
data = df)
summary(test)
model9_step = lm(formula = mean_pop ~ size + residential_area + commercial_area +
green_area + pop_density + arrival + fine_dust + mean_temp,
data = df)
summary(model9_step)
model9_step = lm(formula = mean_pop ~ size + residential_area * 100 + commercial_area * 100 +
green_area * 100 + pop_density + arrival + fine_dust + mean_temp,
data = df)
summary(model9_step)
library(rmarkdown)
library(knitr)
library(rmarkdown)
rm(list = ls())
path_res = "~/GitRepo/Multicampus_semi/JH_working/proc/"
# load data set
load(paste0(path_res, "final_df_for_liner_model.Rdata"))
write.csv(df, paste0(path_res, "final_df_for_linear_model.csv""))
)
write.csv(df, paste0(path_res, "final_df_for_linear_model.csv"))
url = "https://raw.githubusercontent.com/jonghyunlee1993/Multicampus_semi/master/Working/proc/final_df_for_linear_model.csv"
df = read.csv(url, fileEncoding = "UTF-8")[, -1]
df$code = as.factor(df$code)
df$IsDustyDay = as.factor(df$IsDustyDay)
df$IsRainyDay = as.factor(df$IsRainyDay)
model_step = lm(formula = log(mean_pop) ~ size + residential_area + commercial_area + green_area + pop_density + arrival + fine_dust + hyper_dust, data = df)
vif(model_step)
library(car)
vit(model_step)
vif(model_step)
a = 1
sessionInfo()
library(knitr)
getwd()
setwd("~/GitRepo/Multicampus_semi/Working/project_report/")
knit("Project_Report.md")
