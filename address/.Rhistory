print("after next")
}
sum_number = 0
while (sum_number <= 20){
i = sample(1:5, 1)
sum_number = sum_number + i
cat(sum_number, "\n")
}
sum_number = 0
while (sum_number <= 20){
i = sample(1:5, 1)
sum_number = sum_number + i
cat(sum_number, "\n")
}
sum_number = 0
while (sum_number <= 20){
i = sample(1:5, 1)
sum_number = sum_number + i
cat(sum_number, "\n")
}
sum_number = 0
while (sum_number <= 20){
i = sample(1:5, 1)
sum_number = sum_number + i
cat(sum_number, "\n")
}
sum_number = 0
while (sum_number <= 20){
i = sample(1:5, 1)
sum_number = sum_number + i
cat(sum_number, "\n")
}
sum_number = 0
while (sum_number <= 20){
i = sample(1:5, 1)
sum_number = sum_number + i
cat(sum_number, "\n")
}
sum_number = 0
while (sum_number <= 20){
i = sample(1:5, 1)
sum_number = sum_number + i
cat(sum_number, "\n")
}
repeat{
cat("A\n")
}
sum_number = 0
repeat{
i = sample(1:5, 1)
sum_number = sum_number + 1
cat(sum_number, "\n")
if (sum_number > 20){
break
}
}
sum_number = 0
repeat{
i = sample(1:5, 1)
sum_number = sum_number + i
cat(sum_number, "\n")
if (sum_number > 20){
break
}
}
sum(c(1,2,3))
print()
?function
function
?function
f1 = function() print("TEST")
f2 = function(num){print("TEST"); print(num)}
f3 = function(p="R"){print(p)}
f1
f1()
f2()
f2(); f2(100)
f2(100)
f3()
f3("python")
f3(p = "JAVA")
f1(10)
f4 = function(p1 = "A", p2){
for (i in 1:p2){
print(p1)
}
}
f4("1", 10)
f4("A", 10)
f4(p2 = 10)
f5 = function(...){
print("TEST")
data = c(...)
print(length(data))
}
f5(c(1,2,3,4,5,6))
View(f5)
?rep
rm(list=ls())
func1 = function(){
xx = 10
yy = 20
return(xx * yy)
}
func1_result = func1()
func1_result
xx
func1()
func1_result = func1()
func1_result
xx # 함수 밖에서 함수 안에서 사용된 변수에 접근할 수 없음.
xx=0
func1_1 = function(){
xx = 10
return(xx)
}
print(xx)
K = func1_1
print(K)
print(xx)
K = func1_1()
print(K)
print(xx)
func1_1 = function(){
print(xx)
xx = 10
return(xx)
}
print(xx)
xx=0
func1_1 = function(){
print(xx)
xx = 10
print(xx)
return(xx)
}
print(xx)
K = func1_1()
print(K)
print(xx)
func2 = function(x,y){
xx = x
yy = y
return(sum(xx,yy))
}
func2_result = func2(1,2)
func2_result
func3 = function(x,y){
x3 = x+1
y3 = y+1
x4 = func2(x3,y3)
return(x4)
}
func3(9,13)
func_self = function(x){
x = func_self(x)
print(x)
}
func_self(1)
func_self = function(x){
x = sum(func_self(x))
if (x > 100){
break;
}
print(x)
}
func_self(1)
exam2 = function(my_num){
result = 0
for (i in 1:my_num){
result = result + i
}
return(result)
}
rm(list=ls())
abs(10)
abs(-19)
operator = +
operator = "+"
as.character
operator_list = c("+", "-", "*", "%/%", "%%")
operator !in operator_list
operator in operator_list
operator
operator_list
# Q4
exam4 = function(num1, operator, num2){
result = 0
if (operator == "+"){
result = num1 + num2
}else if (operator == "-"){
result = num1 - num2
}else if (operator == "*"){
result = num1 * num2
}else if (operator == "%/%" | operator == "%%"){
if (num1 == 0){
print("오류 1")
}else if (num2 == 0){
print("오류 2")
}else{
if (operator == "%/%"){
result = num1 %/% num2
}else{
result = num1 %% num2
}
}
}else{
print("규격의 연산자만 전달하세요")
}
}
Q4_result = exam4(10, "+", 20)
Q4_result
Q4_result = exam4(0, "%%", 3)
Q4_result = exam4(3, "%%", 0)
Q4_result
# Q4
exam4 = function(num1, operator, num2){
result = 0
if (operator == "+"){
result = num1 + num2
}else if (operator == "-"){
result = num1 - num2
}else if (operator == "*"){
result = num1 * num2
}else if (operator == "%/%" | operator == "%%"){
if (num1 == 0){
result = "오류 1"
}else if (num2 == 0){
result = "오류 2"
}else{
if (operator == "%/%"){
result = num1 %/% num2
}else{
result = num1 %% num2
}
}
}else{
result = "규격의 연산자만 전달하세요"
}
return(result)
}
Q4_result = exam4(10, "+", 20)
Q4_result
Q4_result = exam4(0, "%%", 3)
Q4_result
Q4_result = exam4(3, "%%", 0)
Q4_result
Q4_result = exam(3, "/", 19)
Q4_result = exam4(3, "/", 19)
Q4_result
Q3_result = exam3(10, 20)
Q3_result
# Q3
exam3() = function(num1, num2){
result = 0
if (num1 > num2){
result = num1 - num2
}else if (num1 < num2){
result = num2 - num1
}else{
result = 0
}
return(result)
}
Q3_result = exam3(10, 20)
# Q3
exam3 = function(num1, num2){
result = 0
if (num1 > num2){
result = num1 - num2
}else if (num1 < num2){
result = num2 - num1
}else{
result = 0
}
return(result)
}
Q3_result = exam3(10, 20)
Q3_result
rm(list=ls())
a = c(1,2,3,4)
3 %in% a
rm(list=ls())
func4 = function(x=100, y=200, z){
return(x+y+Z)
}
func4()
func4(10,20,30)
return(x+y+z)
func4 = function(x=100, y=200, z){
return(x+y+z)
}
func4(10,20,30)
func4(z=100)
a = 3; b = 7; c = 11;
ft = function(a){
b = a + 10
c <<- a + 10
d = a
a; b; c; d
return()
}
print(ft(100))
a = 3; b = 7; c = 11;
ft = function(a){
b = a + 10
c <<- a + 10
d = a
print(a); print(b); print(c); print(d)
return()
}
print(ft(100))
a; b; c; d
sum
sum()
a = c(1,2)
a
a()
hi <- function() {
print("hi")
}
hi()
hi
string <- function(print(sting))
print(string)
print(string)
print(x)
string <- function(x){
print(x)
}
View(string)
string("안녀영")
printMyString = function(x, y, z){
print(x)
print(y)
print(z)
}
printMySting("A", "가", "B")
printMyString("A", "가", "B")
printMyString = function(x, y, z){
print(z)
print(y)
print(x)
}
printMyString("A", "가", "B")
myVec = c(1,2,3,4,5)
sum(myVec)
result <- sum(myVec)
result
a = print(3)
a
rm(a)
a
a = print(3)
a
rm(a)
a = cat(3)
a
library(xlsx)
library(rJava)
library(xlsx)
library(xlsx)
library(rjava)
library(rJava)
dir(paste0(system2('/usr/libexec/java_home',stdout = TRUE)))
dyn.load(paste0(system2('/usr/libexec/java_home', stdout = TRUE), '/jre/lib/server/libjvm.dylib'))
dyn.load("/Library/Java/JavaVirtualMachines/jdk-13.0.1.jdk/Contents/Home/jre/lib/server/libjvm.dylib")
library(rJava)
Sys.setenv("JAVA_HOME" = /Library/Java/JavaVirtualMachines/jdk-13.0.1.jdk/Contents/Home/jre)
Sys.setenv("JAVA_HOME" = "/Library/Java/JavaVirtualMachines/jdk-13.0.1.jdk/Contents/Home/jre")
dyn.load("/Library/Java/JavaVirtualMachines/jdk-13.0.1.jdk/Contents/Home/jre/lib/server/libjvm.dylib")
a = 1:10
matrix(a)
setwd("~/GitRepo/Multicampus_semi/address")
data = read.csv("distance_matrix.csv")
data = data[-1]
header_data = read.csv("집계코드_위도_경도_주소.csv", fileEncoding = "CP949", encoding = "euc-kr")
options("scipen" = 100)
header = header_data[,2]
head(header_data)
department = read.csv("점포이름_위도_경도_주소.csv", fileEncoding = "CP949", encoding = "euc-kr")
head(department)
# sum(data == 0)
# my_mat = matrix(rep(0,length(data)*5), nrow=5)
my_mat = NULL
for (dept in 1:length(data)){
dat = data[,dept]
dat[dat == 0] = NA
idx = order(dat)
my_mat = cbind(my_mat, head(header[idx]), head(sort(dat)))
print(my_mat[,dept])
}
my_mat[1,c(1:2)]
library(rgdal)
library(ggplot2)
my_spdf <- readOGR(
dsn= paste0("../map/") ,
layer="seoul",
verbose=FALSE
)
proj4string(my_spdf)
my_spdf <- readOGR(
dsn= paste0("../map/") ,
layer="seoul"
)
proj4string(my_spdf)
from_crs = CRS("+proj=tmerc +lat_0=38 +lon_0=127 +k=1 +x_0=200000 +y_0=500000 +ellps=bessel +units=m")
to_crs = CRS("+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs")
proj4string(my_spdf) = from_crs
converted = spTransform(my_spdf, to_crs)
converted
plot(converted, axes = T)
ggplot() +
geom_polygon(data = converted, aes( x = long, y = lat, group = group), fill="#69b3a2", color="white") +
theme_void() + geom_point(data = department, aes(lon, lat))
plot(converted)
plot(converted, axes = T)
depart = department[1,]
depart
from_crs = CRS("+proj=tmerc +lat_0=38 +lon_0=127 +k=1 +x_0=337412.92 +y_0=205430.25 +ellps=bessel +units=m")
to_crs = CRS("+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs")
proj4string(my_spdf) = from_crs
converted = spTransform(my_spdf, to_crs)
converted
plot(converted, axes = T)
from_crs = CRS("+proj=tmerc +lat_0=38 +lon_0=127 +k=1 +x_0=200000 +y_0=600000 +ellps=GRS80 +units=m +no_defs")
to_crs = CRS("+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs")
proj4string(my_spdf) = from_crs
converted = spTransform(my_spdf, to_crs)
plot(converted, axes = T)
to_crs = CRS("+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0.0 +k=1.0 +units=m +nadgrids=@null +no_defs")
proj4string(my_spdf) = from_crs
converted = spTransform(my_spdf, to_crs)
plot(converted, axes = T)
to_crs = CRS("+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs")
proj4string(my_spdf) = from_crs
converted = spTransform(my_spdf, to_crs)
plot(converted, axes = T)
plot(converted, axes = T)
# 한국 중부 좌표계
from_crs = CRS("+proj=tmerc +lat_0=38 +lon_0=127 +k=1 +x_0=200000 +y_0=500000 +ellps=bessel +units=m +no_defs)
# 한국 중부 좌표계
from_crs = CRS("+proj=tmerc +lat_0=38 +lon_0=127 +k=1 +x_0=200000 +y_0=500000 +ellps=bessel +units=m +no_defs")
# 세계 표준 좌표계
to_crs = CRS("+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs")
proj4string(my_spdf) = from_crs
converted = spTransform(my_spdf, to_crs)
plot(converted, axes = T)
# 한국 중부 좌표계
from_crs = CRS("+proj=tmerc +lat_0=38 +lon_0=127.5 +k=0.996 +x_0=1000000 +y_0=2000000 +ellps=GSR80 +units=m")
# 세계 표준 좌표계
to_crs = CRS("+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs")
# 한국 중부 좌표계
from_crs = CRS("+proj=tmerc +lat_0=38 +lon_0=127.5 +k=0.996 +x_0=1000000 +y_0=2000000 +ellps=GRS80 +units=m")
# 세계 표준 좌표계
to_crs = CRS("+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs")
proj4string(my_spdf) = from_crs
converted = spTransform(my_spdf, to_crs)
plot(converted, axes = T)
ggplot() +
geom_polygon(data = converted, aes( x = long, y = lat, group = group), fill="#69b3a2", color="white") +
theme_void() + geom_point(data = department, aes(lon, lat))
haed(department)
head(department)
library(dplyr)
department$name
substr(department$name,1)
substr(department$name,1, 2)
department %>% mutate(ifelse(substr(name, 1, 2)) == "신세", 1,
ifelse(substr(name, 1, 2) == "현대", 2, 3))
department$comp = department %>% mutate(ifelse(substr(name, 1, 2)) == "신세", 1,
ifelse(substr(name, 1, 2) == "현대", 2, 3))
department$comp
View(department)
department = read.csv("점포이름_위도_경도_주소.csv", fileEncoding = "CP949", encoding = "euc-kr")
head(department)
?mutate
department %>% mutate(comp = ifelse(substr(name, 1, 2)) == "신세", 1,
ifelse(substr(name, 1, 2) == "현대", 2, 3))
View(department)
department %>% mutate(comp = ifelse(substr(name, 1, 2)) == "신세", 1,
ifelse(substr(name, 1, 2) == "현대", 2, 3))
department = department %>% mutate(comp = ifelse(substr(name, 1, 2)) == "신세", 1,
ifelse(substr(name, 1, 2) == "현대", 2, 3))
View(department)
department = read.csv("점포이름_위도_경도_주소.csv", fileEncoding = "CP949", encoding = "euc-kr")
head(department)
department = department %>% mutate(comp = ifelse(substr(name, 1, 2)) == "신세", 1,
ifelse(substr(name, 1, 2) == "현대", 2, 3))
View(department)
substr(name, 1, 2))
department %>% mutate(substr(name, 1, 2))
department = read.csv("점포이름_위도_경도_주소.csv", fileEncoding = "CP949", encoding = "euc-kr")
department %>% mutate(substr(name, 1, 2))
department %>% mutate(temp = substr(name, 1, 2))
department %>% mutate(comp = ifelse(substr(name, 1, 2) == "신세", 1, 2)
department %>% mutate(comp = ifelse(substr(name, 1, 2) == "신세", 1, 2))
department %>% mutate(comp = ifelse(substr(name, 1, 2) == "신세", 1, 2))
department %>% mutate(comp = ifelse(substr(name, 1, 2) == "신세", 1,
ifelse(substr(name, 1, 2) == "현대", 2, 3)))
department
View(department)
department = department %>% mutate(comp = ifelse(substr(name, 1, 2) == "신세", 1,
ifelse(substr(name, 1, 2) == "현대", 2, 3)))
View(department)
ggplot() +
geom_polygon(data = converted, aes( x = long, y = lat, group = group), fill="#69b3a2", color="white") +
theme_void() + geom_point(data = department, aes(lon, lat, colours = factor(comp)))
ggplot() +
geom_polygon(data = converted, aes( x = long, y = lat, group = group), fill="#69b3a2", color="white") +
theme_void() + geom_point(data = department, aes(lon, lat, colour = factor(comp)))
rm(list=ls())
