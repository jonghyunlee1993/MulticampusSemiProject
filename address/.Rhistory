func3(9,13)
func_self = function(x){
x = func_self(x)
print(x)
}
func_self(1)
func_self = function(x){
x = sum(func_self(x))
if (x > 100){
break;
}
print(x)
}
func_self(1)
exam2 = function(my_num){
result = 0
for (i in 1:my_num){
result = result + i
}
return(result)
}
rm(list=ls())
abs(10)
abs(-19)
operator = +
operator = "+"
as.character
operator_list = c("+", "-", "*", "%/%", "%%")
operator !in operator_list
operator in operator_list
operator
operator_list
# Q4
exam4 = function(num1, operator, num2){
result = 0
if (operator == "+"){
result = num1 + num2
}else if (operator == "-"){
result = num1 - num2
}else if (operator == "*"){
result = num1 * num2
}else if (operator == "%/%" | operator == "%%"){
if (num1 == 0){
print("오류 1")
}else if (num2 == 0){
print("오류 2")
}else{
if (operator == "%/%"){
result = num1 %/% num2
}else{
result = num1 %% num2
}
}
}else{
print("규격의 연산자만 전달하세요")
}
}
Q4_result = exam4(10, "+", 20)
Q4_result
Q4_result = exam4(0, "%%", 3)
Q4_result = exam4(3, "%%", 0)
Q4_result
# Q4
exam4 = function(num1, operator, num2){
result = 0
if (operator == "+"){
result = num1 + num2
}else if (operator == "-"){
result = num1 - num2
}else if (operator == "*"){
result = num1 * num2
}else if (operator == "%/%" | operator == "%%"){
if (num1 == 0){
result = "오류 1"
}else if (num2 == 0){
result = "오류 2"
}else{
if (operator == "%/%"){
result = num1 %/% num2
}else{
result = num1 %% num2
}
}
}else{
result = "규격의 연산자만 전달하세요"
}
return(result)
}
Q4_result = exam4(10, "+", 20)
Q4_result
Q4_result = exam4(0, "%%", 3)
Q4_result
Q4_result = exam4(3, "%%", 0)
Q4_result
Q4_result = exam(3, "/", 19)
Q4_result = exam4(3, "/", 19)
Q4_result
Q3_result = exam3(10, 20)
Q3_result
# Q3
exam3() = function(num1, num2){
result = 0
if (num1 > num2){
result = num1 - num2
}else if (num1 < num2){
result = num2 - num1
}else{
result = 0
}
return(result)
}
Q3_result = exam3(10, 20)
# Q3
exam3 = function(num1, num2){
result = 0
if (num1 > num2){
result = num1 - num2
}else if (num1 < num2){
result = num2 - num1
}else{
result = 0
}
return(result)
}
Q3_result = exam3(10, 20)
Q3_result
rm(list=ls())
a = c(1,2,3,4)
3 %in% a
rm(list=ls())
func4 = function(x=100, y=200, z){
return(x+y+Z)
}
func4()
func4(10,20,30)
return(x+y+z)
func4 = function(x=100, y=200, z){
return(x+y+z)
}
func4(10,20,30)
func4(z=100)
a = 3; b = 7; c = 11;
ft = function(a){
b = a + 10
c <<- a + 10
d = a
a; b; c; d
return()
}
print(ft(100))
a = 3; b = 7; c = 11;
ft = function(a){
b = a + 10
c <<- a + 10
d = a
print(a); print(b); print(c); print(d)
return()
}
print(ft(100))
a; b; c; d
sum
sum()
a = c(1,2)
a
a()
hi <- function() {
print("hi")
}
hi()
hi
string <- function(print(sting))
print(string)
print(string)
print(x)
string <- function(x){
print(x)
}
View(string)
string("안녀영")
printMyString = function(x, y, z){
print(x)
print(y)
print(z)
}
printMySting("A", "가", "B")
printMyString("A", "가", "B")
printMyString = function(x, y, z){
print(z)
print(y)
print(x)
}
printMyString("A", "가", "B")
myVec = c(1,2,3,4,5)
sum(myVec)
result <- sum(myVec)
result
a = print(3)
a
rm(a)
a
a = print(3)
a
rm(a)
a = cat(3)
a
library(xlsx)
library(rJava)
library(xlsx)
library(xlsx)
library(rjava)
library(rJava)
dir(paste0(system2('/usr/libexec/java_home',stdout = TRUE)))
dyn.load(paste0(system2('/usr/libexec/java_home', stdout = TRUE), '/jre/lib/server/libjvm.dylib'))
dyn.load("/Library/Java/JavaVirtualMachines/jdk-13.0.1.jdk/Contents/Home/jre/lib/server/libjvm.dylib")
library(rJava)
Sys.setenv("JAVA_HOME" = /Library/Java/JavaVirtualMachines/jdk-13.0.1.jdk/Contents/Home/jre)
Sys.setenv("JAVA_HOME" = "/Library/Java/JavaVirtualMachines/jdk-13.0.1.jdk/Contents/Home/jre")
dyn.load("/Library/Java/JavaVirtualMachines/jdk-13.0.1.jdk/Contents/Home/jre/lib/server/libjvm.dylib")
a = 1:10
matrix(a)
getwd()
setwd("~/GitRepo/Multicampus_semi/address/")
data = read.csv("distance_matrix.csv")
min(data[,1])
mean(data[,1])
length(data)
my_mat = matrix(rep(length(data)*5), nrow=5)
my_mat = matrix(rep(0,length(data)*5), nrow=5)
View(my_mat)
data[1]
data[2]
View(data)
data[-1]
temp = data[-1]
View(temp)
data = data[-1]
my_mat = matrix(rep(0,length(data)*5), nrow=5)
head(sort(data[1]))
head(sort(data[,1]))
for (dept in 1:length(data)){
my_mat[,dept] = head(sort(data[,dept]))
}
rm(my_mat)
for (dept in 1:length(data)){
my_mat[,dept] = head(sort(data[,dept]))
}
# my_mat = matrix(rep(0,length(data)*5), nrow=5)
my_mat = NULL
for (dept in 1:length(data)){
my_mat[,dept] = head(sort(data[,dept]))
}
for (dept in 1:length(data)){
my_mat = cbind(my_mat, head(sort(data[,dept])))
}
View(my_mat)
sum(data == 1)
data == 1
sum(data == 1)
for (dept in 1:length(data)){
# my_mat = cbind(my_mat, head(sort(data[,dept])))
print(head(sort(data[,dept])))
}
sum(data == 0)
line = data[,dept]
line == 0
line(line == 0)
dat = data[,dept]
dat == 0
sum(dat == 0)
dat = data[,3]
sum(dat == 0)
dat(dat == 0)
dat[dat == 0]
rm(dat[dat == 0])
dat[dat == 0] = NA
dat[dat==0]
dat==0
head(sort(dat))
# my_mat = matrix(rep(0,length(data)*5), nrow=5)
my_mat = NULL
for (dept in 1:length(data)){
dat = data[,dept]
dat[dat == 0] = NA
my_mat = cbind(my_mat, head(sort(data[,dept])))
print(head(sort(data[,dept])))
}
# my_mat = matrix(rep(0,length(data)*5), nrow=5)
my_mat = NULL
for (dept in 1:length(data)){
dat = data[,dept]
dat[dat == 0] = NA
my_mat = cbind(my_mat, head(sort(dat[,dept])))
print(head(sort(dat[,dept])))
}
# my_mat = matrix(rep(0,length(data)*5), nrow=5)
my_mat = NULL
for (dept in 1:length(data)){
dat = data[,dept]
dat[dat == 0] = NA
my_mat = cbind(my_mat, head(sort(dat)))
print(my_mat[,dept])
}
header = read.csv("집계코드_위도_경도_주소.csv")
header = read.csv("집계코드_위도_경도_주소.csv", encoding = "UTF-8")
header = read.csv("집계코드_위도_경도_주소.csv", encoding = "euc-kr")
header = read.csv("집계코드_위도_경도_주소.csv", fileEncoding = "CP949", encoding = "euc-kr")
header[1]
header[2]
header[2,1]
header[1,2]
header = read.csv("집계코드_위도_경도_주소.csv", fileEncoding = "CP949", encoding = "euc-kr")
header[1,2]
rm(header)
header = read.csv("집계코드_위도_경도_주소.csv", fileEncoding = "CP949", encoding = "euc-kr")
View(header)
options("scipen"=100)
View(header)
options("scipen" 100)
options("scipen" = 100)
header(2)
header(,2)
header[,2]
sort(dat)
order(dat)
sort(order(dat))
idx = order(dat)
View(header)
rm(list = ls())
data = read.csv("distance_matrix.csv")
data = data[-1]
header_data = read.csv("집계코드_위도_경도_주소.csv", fileEncoding = "CP949", encoding = "euc-kr")
options("scipen" = 100)
header = header_data[,2]
# my_mat = matrix(rep(0,length(data)*5), nrow=5)
my_mat = NULL
dept=1
dat = data[,dept]
dat[dat == 0] = NA
idx = order(dat)
header[idx]
header[1]
idx[1]
header[idx == 1]
head(sort(dat))
header[sort(idx)]
head(header[sort(idx)])
idx = order(dat)
idx
head(sort(dat))
head(header[idx])
head(header[idx])
for (dept in 1:length(data)){
dat = data[,dept]
dat[dat == 0] = NA
idx = order(dat)
my_mat = cbind(my_mat, head(header[idx]), head(sort(dat)))
print(my_mat[,dept])
}
my_mat
View(my_mat)
my_mat[1,1]
header_data[header == my_mat]
header == my_mat
header == my_mat[1,1]
header == my_mat[1,1]
header_data[header == my_mat[1,1]]
header[header_data == my_mat[1,1],1]
dim(header)
dim(header_data)
header_data[header_data == my_mat[1,1],1]
header_data == my_mat[1,1]
header_data[,1] == my_mat[1,1]
header_data[header_data[,1] == my_mat[1,1],1]
sum(header_data[,1] == my_mat[1,1])
my_mat[1,1]
sum(header_data[,2] == my_mat[1,1])
header_data[header_data[,2] == my_mat[1,1],1]
header_data[header_data[,2] == my_mat[1,1],3]
header_data[header_data[,2] == my_mat[1,1],4]
header_data[header_data[,2] == my_mat[1,1],3]
header_data[header_data[,2] == my_mat[1,1],4]
x = header_data[header_data[,2] == my_mat[1,1],3]
y = header_data[header_data[,2] == my_mat[1,1],4]
plot(x,y)
department = read.csv("백화점주소_2019년.csv")
department = read.csv("백화점주소_2019년.csv", fileEncoding = "CP949", encoding = "euc-kr")
View(department)
department = read.csv("점포이름_위도_경도_주소.csv", fileEncoding = "CP949", encoding = "euc-kr")
View(deparse())
View(department
)
install.packages("rgdal")
library(rgdal)
library(rgdal)
library(ggplot2)
getwd()
my_spdf <- readOGR(
dsn= paste0("../map/") ,
layer="seoul",
verbose=FALSE
)
install.packages("broom")
# 'fortify' the data to get a dataframe format required by ggplot2
library(broom)
spdf_fortified <- tidy(my_spdf, region = "NAME")
View(my_spdf)
# Plot it
ggplot() +
geom_polygon(data = spdf_fortified, aes( x = long, y = lat, group = group), fill="#69b3a2", color="white") +
theme_void()
# Plot it
ggplot() +
geom_polygon(data = my_spdf, aes( x = long, y = lat, group = group), fill="#69b3a2", color="white") +
theme_void()
plot(my_spdf, col="#f2f2f2", bg="skyblue", lwd=0.25, border=0 )
?geom_point
fig + geom_point(aes(x,y))
# Plot it
fig = ggplot() +
geom_polygon(data = my_spdf, aes( x = long, y = lat, group = group), fill="#69b3a2", color="white") +
theme_void()
plot(my_spdf, col="#f2f2f2", bg="skyblue", lwd=0.25, border=0 )
plot(my_spdf, col="#f2f2f2", bg="skyblue", border=0 )
# Plot it
fig = ggplot() +
geom_polygon(data = my_spdf, aes( x = long, y = lat, group = group), fill="#69b3a2", color="white") +
theme_void() + geom_point(aes(x,y))
fig
ggplot() +
geom_polygon(data = my_spdf, aes( x = long, y = lat, group = group), fill="#69b3a2", color="white") +
theme_void()
x
y
header_data[,2] == my_mat[1,1]
header_data[header_data[,2] == my_mat[1,1],2]
header_data[header_data[,2] == my_mat[1,1], 2]
target = header_data[header_data[,2] == my_mat[1,1], 2]
my_spdf
my_spdf[1]
my_spdf[2]
View(my_spdf[1])
View(my_spdf[2])
head(my_spdf@data)
head(my_spdf@data[0])
head(my_spdf@data[1])
head(my_spdf@data[,1])
head(my_spdf@data)
my_spdf@data[, "TOT_REG_CD" == my_mat[1,1]]
my_spdf@data[, int("TOT_REG_CD") == my_mat[1,1]]
my_spdf@data[, as.int("TOT_REG_CD") == my_mat[1,1]]
my_spdf@data[, as.integer("TOT_REG_CD") == my_mat[1,1]]
my_spdf@data[, "TOT_REG_CD"]
as.integer(my_spdf@data[, "TOT_REG_CD"])
as.integer(my_spdf@data[, "TOT_REG_CD"]) == my_mat[1,1]
my_spdf[,as.integer(my_spdf@data[, "TOT_REG_CD"]) == my_mat[1,1]]
my_coord = my_spdf[,as.integer(my_spdf@data[, "TOT_REG_CD"]) == my_mat[1,1]]
plot(my_coord, col="#f2f2f2", bg="skyblue", border=0 )
as.integer(my_spdf@data[, "TOT_REG_CD"]) == my_mat[1,1]
sum(as.integer(my_spdf@data[, "TOT_REG_CD"]) == my_mat[1,1])
temp <- copy(my_spdf[my_spdf@data$TOT_REG_CD==my_map[1,1],])
temp <- my_spdf[my_spdf@data$TOT_REG_CD==my_map[1,1],]
temp <- my_spdf[my_spdf@data$TOT_REG_CD==my_mat[1,1],]
temp
plot(temp)
ggplot() + geom_polygon(data = temp, aes(x = long, y = lat, group = group)) +
theme_void() + geom_point(aes(x,y))
ggplot() + geom_polygon(data = temp, aes(x = long, y = lat, group = group))
ggplot() +
geom_polygon(data = temp, aes( x = long, y = lat, group = group), fill="#69b3a2", color="white")
x = depart[header_data[,2] == my_mat[1,1],3]
department[header_data[,2] == my_mat[1,1],3]
View(department)
department[header_data[,2] == my_mat[1,1]]
x = department[header_data[,2] == my_mat[1,1], 3]
department[header_data[,2] == my_mat[1,1], 3]
department[1]$lon
department$lon
department$lon[1]
x = department$lon[1]
y = department$lat[1]
ggplot() +
geom_polygon(data = temp, aes( x = long, y = lat, group = group), fill="#69b3a2", color="white") +
geom_point(x,y)
ggplot() +
geom_polygon(data = temp, aes( x = long, y = lat, group = group), fill="#69b3a2", color="white") +
geom_point(aes(x,y))
ggplot() +
geom_polygon(data = my_spdf, aes( x = long, y = lat, group = group), fill="#69b3a2", color="white") +
theme_void()
ggplot() +
geom_polygon(data = temp, aes( x = long, y = lat, group = group), fill="#69b3a2", color="white")
View(temp)
depart = departemnt[1,]
departemnt
depart = department[1,]
departe
depart
ggplot() +
geom_polygon(data = temp, aes( x = long, y = lat, group = group), fill="#69b3a2", color="white") +
geom_point(data = depart, aes(x = lon, y = lat))
ggplot()+
geom_point(department, aes(lon, lat))
ggplot()+
geom_point(data = department, aes(lon, lat))
?spTransform
shapefile <- spTransform(my_spdf, CRS("+proj=longlat +datum=WGS84")) #change CRS
library(rgdal)
plot(my_spdf, col="#f2f2f2", bg="skyblue", border=0 )
shapefile <- spTransform(my_spdf, CRS("+proj=longlat +datum=WGS84")) #change CRS
proj4string(my_spdf) <- CRS("+proj=longlat +datum=WGS84")
proj4string(my_spdf)
proj4string(my_spdf) <- CRS("+proj=longlat +ellps=WGS84")
