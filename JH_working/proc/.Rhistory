data = read.csv(pate0(path_data, fname), fileEncoding = "UTF-8")
parse_data = data[, c(2, 4, 5, 7:18, 21:32)]
names(parse_data) = c(default_names, male_names, female_names)
open_hours = parse_data[parse_data$시간대 %in% c(10:20) & parse_data$집계구 %in% codes, ]
date_res = cbind(date = rep(format(weekend[my_date], "%Y%m%d"), nrow(open_hours)), open_hours)
res = rbind(res, date_res)
return(res)
}
codes = department_data$code
res = NULL
open_hour = function(path_data, fname, res){
data = read.csv(pate0(path_data, fname), fileEncoding = "UTF-8")
parse_data = data[, c(2, 4, 5, 7:18, 21:32)]
names(parse_data) = c(default_names, male_names, female_names)
open_hours = parse_data[parse_data$시간대 %in% c(10:20) & parse_data$집계구 %in% codes, ]
date_res = cbind(date = rep(format(weekend[my_date], "%Y%m%d"), nrow(open_hours)), open_hours)
res = rbind(res, date_res)
return(res)
}
for (my_date in 1:length(weekend)){
cat(my_date, "/", length(weekend), "\n")
fname = paste0("LOCAL_PEOPLE_", format(weekend[my_date], "%Y%m%d"), ".csv")
try({res = open_hour(path_data, fname, res)})
}
res = NULL
open_hour = function(path_data, fname, res){
data = read.csv(paste0(path_data, fname), fileEncoding = "UTF-8")
parse_data = data[, c(2, 4, 5, 7:18, 21:32)]
names(parse_data) = c(default_names, male_names, female_names)
open_hours = parse_data[parse_data$시간대 %in% c(10:20) & parse_data$집계구 %in% codes, ]
date_res = cbind(date = rep(format(weekend[my_date], "%Y%m%d"), nrow(open_hours)), open_hours)
res = rbind(res, date_res)
return(res)
}
for (my_date in 1:length(weekend)){
cat(my_date, "/", length(weekend), "\n")
fname = paste0("LOCAL_PEOPLE_", format(weekend[my_date], "%Y%m%d"), ".csv")
try({res = open_hour(path_data, fname, res)})
}
fname = paste0("LOCAL_PEOPLE_", format(weekend[my_date], "%Y%m%d"), ".csv")
fname
path_data
# load local people dataset
local_files = dir(path = path_data, pattern = "*.csv")
# path
path_data = "/Volumes/Transcend/Local_people_dataset"
# load local people dataset
local_files = dir(path = path_data, pattern = "*.csv")
local_files
res = NULL
open_hour = function(path_data, fname, res){
data = read.csv(paste0(path_data, fname), fileEncoding = "UTF-8")
parse_data = data[, c(2, 4, 5, 7:18, 21:32)]
names(parse_data) = c(default_names, male_names, female_names)
open_hours = parse_data[parse_data$시간대 %in% c(10:20) & parse_data$집계구 %in% codes, ]
date_res = cbind(date = rep(format(weekend[my_date], "%Y%m%d"), nrow(open_hours)), open_hours)
res = rbind(res, date_res)
return(res)
}
for (my_date in 1:length(weekend)){
cat(my_date, "/", length(weekend), "\n")
fname = paste0("LOCAL_PEOPLE_", format(weekend[my_date], "%Y%m%d"), ".csv")
try({res = open_hour(path_data, fname, res)})
}
# path
path_data = "/Volumes/Transcend/Local_people_dataset/"
res = NULL
open_hour = function(path_data, fname, res){
data = read.csv(paste0(path_data, fname), fileEncoding = "UTF-8")
parse_data = data[, c(2, 4, 5, 7:18, 21:32)]
names(parse_data) = c(default_names, male_names, female_names)
open_hours = parse_data[parse_data$시간대 %in% c(10:20) & parse_data$집계구 %in% codes, ]
date_res = cbind(date = rep(format(weekend[my_date], "%Y%m%d"), nrow(open_hours)), open_hours)
res = rbind(res, date_res)
return(res)
}
for (my_date in 1:length(weekend)){
cat(my_date, "/", length(weekend), "\n")
fname = paste0("LOCAL_PEOPLE_", format(weekend[my_date], "%Y%m%d"), ".csv")
try({res = open_hour(path_data, fname, res)})
}
head(res)
rownames(res) <- 1:nrow(res)
head(res)
getwd()
save(res, file = paste0(path_res, "local_pop_weekend.Rdata"))
rm(list = ls())
rm(list = ls())
# load 집계구
department_data = read.csv(paste0(path_meta, "department.csv"))
codes = department_data$code
# path
path_data = "/Volumes/Transcend/Card_subway_dataset/"
path_meta = "~/GitRepo/Multicampus_semi/JH_working/data/"
path_res = "~/GitRepo/Multicampus_semi/JH_working/proc"
# load 집계구
department_data = read.csv(paste0(path_meta, "department.csv"))
# load subway dataset
subway_files = dir(path = path_data, pattern = "*.csv")
# make sequential data and parse only weekend
days = seq.Date(as.Date("2017/1/1"), as.Date("2019/11/30"), by="day")
dow = weekdays(days)
weekend = days[dow %in% c("Saturday", "Sunday")]
head(weekend)
temp = read.csv(files[1])
temp = read.csv(station_files[1])
temp = read.csv(subway_files[1])
View(temp)
temp = read.csv(subway_files[1])[, -7]
View(temp)
names(temp) = c("date", "line", "station_no", "station_name",
"departure", "arrival")
temp$station_no %in% stations
stations = department_data$subway_code
temp$station_no %in% stations
library(dplyr)
res = temp %>% filter(date %in% weekend & station_no %in% stations)
View(res)
temp
temp %>% filter(date %in% weekend)
weekend
as.Date.character(weekend)
weekend_str = paste0(substr(as.character(weekend), 1, 4),
substr(as.character(weekend), 6, 7),
substr(as.character(weekend), 9, 10))
weekend_str
temp
temp$date
class(temp$date)
weekend_str = as.interger(paste0(substr(as.character(weekend), 1, 4),
substr(as.character(weekend), 6, 7),
substr(as.character(weekend), 9, 10)))
weekend_num = as.integer(paste0(substr(as.character(weekend), 1, 4),
substr(as.character(weekend), 6, 7),
substr(as.character(weekend), 9, 10)))
weekend_num
res = temp %>%
filter(date %in% weekend & station_no %in% stations)
res
temp %>% filter(date %in% weekend_num)
res = temp %>%
filter(date %in% weekend_num & station_no %in% stations)
View(res)
res = temp %>%
filter(date %in% weekend_num & station_no %in% stations) %>%
select(-c("line", "departure"))
head(res)
res = NULL
for (file in subway_files){
temp = read.csv(file)[, -7]
names(temp) = c("date", "line", "station_no", "station_name",
"departure", "arrival")
subway_month = temp %>%
filter(date %in% weekend_num & station_no %in% stations) %>%
select(-c("line", "departure"))
res = rbind(res, subway_month)
}
file
View(res)
temp
read.csv(file)[, -7]
read.csv(file)
file
read.csv(file)
temp = read.csv(file, row.names = F)[, -7]
read.csv(file, row.names = F)
temp = read.csv(file, row.names = NULL)[, -7]
length(subway_files)
res = NULL
for (file in subway_files){
cat(file, "\n")
temp = read.csv(file, row.names = NULL)[, -7]
names(temp) = c("date", "line", "station_no", "station_name",
"departure", "arrival")
subway_month = temp %>%
filter(date %in% weekend_num & station_no %in% stations) %>%
select(-c("line", "departure"))
res = rbind(res, subway_month)
}
devtools::install_github("walkerke/tidycensus")
res = NULL
for (file in subway_files){
cat(file, "\n")
temp = read.csv(file, row.names = NULL)[, -7]
names(temp) = c("date", "line", "station_no", "station_name",
"departure", "arrival")
subway_month = temp %>%
filter(date %in% weekend_num & station_no %in% stations) %>%
select(-c("line", "departure"))
res = rbind(res, subway_month)
}
res = NULL
for (file in subway_files){
cat(file, "\n")
temp = read.csv(file, row.names = NULL)
names(temp) = c("date", "line", "station_no", "station_name",
"departure", "arrival")
subway_month = temp %>%
filter(date %in% weekend_num & station_no %in% stations) %>%
select(-c("line", "departure"))
res = rbind(res, subway_month)
}
temp = read.csv(file, row.names = NULL, .name_repair = "minimal")
res = NULL
for (file in subway_files){
cat(file, "\n")
temp = read.csv(file, row.names = NULL, .name_repair = "minimal")
names(temp) = c("date", "line", "station_no", "station_name",
"departure", "arrival", "a")
subway_month = temp %>%
filter(date %in% weekend_num & station_no %in% stations) %>%
select(-c("line", "departure"))
res = rbind(res, subway_month)
}
res = NULL
for (file in subway_files){
cat(file, "\n")
temp = read.csv(file, row.names = NULL)
names(temp) = c("date", "line", "station_no", "station_name",
"departure", "arrival", "a")
subway_month = temp %>%
filter(date %in% weekend_num & station_no %in% stations) %>%
select(-c("line", "departure"))
res = rbind(res, subway_month)
}
res = NULL
for (file in subway_files){
cat(file, "\n")
temp = read.csv(file, row.names = NULL)
names(temp) = c("date", "line", "station_no", "station_name",
"departure", "arrival", "a")
subway_month = temp %>%
filter(date %in% weekend_num & station_no %in% stations) %>%
select(-c("line", "departure"))
res = rbind(res, subway_month)
}
res = NULL
for (file in subway_files){
cat(file, "\n")
temp = read.csv(file, row.names = NULL)
names(temp) = c("date", "line", "station_no", "station_name",
"departure", "arrival", "a")
subway_month = temp %>%
filter(date %in% weekend_num & station_no %in% stations) %>%
select(-c("line", "departure"))
res = rbind(res, subway_month)
}
temp = read.csv(file, row.names = NULL)
res = NULL
for (file in subway_files){
cat(file, "\n")
temp = read.csv(file, row.names = NULL)
names(temp) = c("date", "line", "station_no", "station_name",
"departure", "arrival", "a")
subway_month = temp %>%
filter(date %in% weekend_num & station_no %in% stations) %>%
select(-c("line", "departure"))
res = rbind(res, subway_month)
}
res = NULL
for (file in subway_files){
cat(file, "\n")
temp = read.csv(file, row.names = NULL)
names(temp) = c("date", "line", "station_no", "station_name",
"departure", "arrival", "a")
subway_month = temp %>%
filter(date %in% weekend_num & station_no %in% stations) %>%
select(-c("line", "departure"))
res = rbind(res, subway_month)
}
temp = read.csv(file, header = F, row.names = NULL)
res = NULL
for (file in subway_files){
cat(file, "\n")
temp = read.csv(file, header = F, row.names = NULL)
names(temp) = c("date", "line", "station_no", "station_name",
"departure", "arrival", "a")
subway_month = temp %>%
filter(date %in% weekend_num & station_no %in% stations) %>%
select(-c("line", "departure"))
res = rbind(res, subway_month)
}
res = NULL
for (file in subway_files){
cat(file, "\n")
temp = read.csv(file, row.names = NULL)
names(temp) = c("date", "line", "station_no", "station_name",
"departure", "arrival", "a")
subway_month = temp %>%
filter(date %in% weekend_num & station_no %in% stations) %>%
select(-c("line", "departure"))
res = rbind(res, subway_month)
}
res = NULL
for (file in subway_files){
cat(file, "\n")
temp = read.csv(file, row.names = NULL)
names(temp) = c("date", "line", "station_no", "station_name",
"departure", "arrival", "a")
subway_month = temp %>%
filter(date %in% weekend_num & station_no %in% stations) %>%
select(-c("line", "departure", "a"))
res = rbind(res, subway_month)
}
View(res)
write.csv(res, paste0(path_res, "weekend_subway.Rdata"))
write.csv(res, paste0(path_res, "weekend_subway.csv"))
write.csv(res, file = paste0(path_res, "local_pop_weekend.csv"))
path_res = "~/GitRepo/Multicampus_semi/JH_working/proc/"
write.csv(res, paste0(path_res, "weekend_subway.csv"))
rm(list = ls())
setwd("~/GitRepo/Multicampus_semi/JH_working/proc/")
load("local_pop_weekend.Rdata")
write.csv(res, "local_pop_weekend.csv")
rm(list = ls())
# path
path_data = "/Volumes/Transcend/Local_people_dataset/"
path_meta = "~/GitRepo/Multicampus_semi/JH_working/data/"
path_res = "~/GitRepo/Multicampus_semi/JH_working/proc/"
rm(list = ls())
getwd()
dir()
load("local_pop_weekend.Rdata")
data = res
library(dplyr)
unique(data$집계구)
temp = data %>% filter(집계구 == 1102052020001)
temp = data %>% filter(집계구 == 1102052020001) %>%
group_by(date) %>%
summarise(mean_visit = mean())
temp = data %>% filter(집계구 == 1102052020001) %>%
group_by(date) %>%
summarise(mean_visit = mean(총생활인구))
plot(temp$date, temp$mean_visit$)
plot(temp$date, temp$mean_visit)
hist(temp$mean_visit)
hist(log(temp$mean_visit))
hist(temp$mean_visit)
temp2 = data %>% filter(집계구 == 1108068010002) %>%
group_by(date) %>%
summarise(mean_visit = mean(총생활인구))
plot(temp2$date, temp$mean_visit)
hist(temp2$mean_visit)
temp3 = data %>% filter(집계구 == 1108068010002) %>%
group_by(date) %>%
summarise(mean_visit = mean(총생활인구))
hist(temp3$mean_visit)
temp3 = data %>% filter(집계구 == 1109071040006) %>%
group_by(date) %>%
summarise(mean_visit = mean(총생활인구))
hist(temp3$mean_visit)
temp4 = data %>% filter(집계구 == 1111066030001) %>%
group_by(date) %>%
summarise(mean_visit = mean(총생활인구))
hist(temp4$mean_visit)
temp5 = data %>% filter(집계구 == 1113075030009) %>%
group_by(date) %>%
summarise(mean_visit = mean(총생활인구))
hist(temp5$mean_visit)
show_hist = function(code){
data = data %>% filter(집계구 == code) %>%
group_by(date) %>%
summarise(mean_visit = mean(총생활인구))
print(hist(data$mean_visit))
}
codes = unique(data$집계구)
?hist
show_hist = function(code){
data = data %>% filter(집계구 == code) %>%
group_by(date) %>%
summarise(mean_visit = mean(총생활인구))
print(hist(data$mean_visit, main = paste("Hist of", code)))
}
codes = unique(data$집계구)
for (code in codes){
show_hist(code)
}
rm(list = ls(
))
rm(list = ls())
install.packages("plm")
library(plm)
path_meta = "~/GitRepo/Multicampus_semi/JH_working/data/"
path_res = "~/GitRepo/Multicampus_semi/JH_working/proc/"
df = read.csv(paste0(path_res, "local_pop_weekend.csv"))
df
df = read.csv(paste0(path_res, "local_pop_weekend.csv"))[, -1]
df
df = read.csv(paste0(path_res, "local_pop_weekend.csv"), stringsAsFactors = F)[, -1]
df$집계구 = as.factor(df$집계구)
df$남10 == "*"
df == "*"
df[df == "*"]
df[df == "*"] = NA
df[, 5:length(df)]
df[, 5:length(df)] = as.integer(df[, 5:length(df)])
apply(df[, 5:length(df)], as.integer)
apply(df[, 5:length(df)], as.integer())
?apply
apply(df[, 5:length(df)], 2, as.integer())
apply(df[, 5:length(df)], 2, as.integer
apply(df[, 5:length(df)], 2, as.integer)
apply(df[, 5:length(df)], 2, as.integer)
df[, 5:length(df)] = apply(df[, 5:length(df)], 2, as.integer)
pd = pdata.frame(df, index=c("date", "집계구"))
library(dplyr)
pop_df = df %>% group_by(date, 집계구) %>%
summarise(mean_pop = mean(총생활인구))
head(pop_df)
pd = pdata.frame(pop_df, index=c("date", "집계구"))
pdim(pd)
rm(pd)
# load department meta data
department = read.csv(paste0(path_meta, "department.csv"))
# load department meta data
department = read.csv(paste0(path_meta, "department.csv"), stringsAsFactors = F)
# load department meta data
department = read.csv(paste0(path_meta, "department.csv"), stringsAsFactors = F)
rm(list = ls())
path_meta = "~/GitRepo/Multicampus_semi/JH_working/data/"
path_res = "~/GitRepo/Multicampus_semi/JH_working/proc/"
# load pop_data
pop = read.csv(paste0(path_res, "local_pop_weekend.csv"), stringsAsFactors = F)[, -1]
pop$집계구 = as.factor(df$집계구)
pop[pop == "*"] = NA
pop[, 5:length(pop)] = as.integer(pop[, 5:length(pop)])
pop[, 5:length(pop)] = apply(pop[, 5:length(pop)], 2, as.integer)
pop_df = df %>% group_by(date, 집계구) %>%
summarise(mean_pop = mean(총생활인구))
pop_df = df %>% group_by(date, 집계구) %>%
summarise(mean_pop = mean(총생활인구))
pop_df = pop %>% group_by(date, 집계구) %>%
summarise(mean_pop = mean(총생활인구))
# load subway_data
subway = read.csv(paste0(path_res, "weekend_subway.csv"), stringsAsFactors = F)
head(subway)
# load subway_data
subway = read.csv(paste0(path_res, "weekend_subway.csv"), stringsAsFactors = F)[, -1]
head(department)
# load department meta data
department = read.csv(paste0(path_meta, "department.csv"), stringsAsFactors = F)
head(department)
View(department)
pop_df = pop %>% group_by(date, 집계구) %>%
summarise(mean_pop = mean(총생활인구)) %>%
rename(code = 집계구)
#
df = left_join(pop_df, department[, 1:7], by = c("date", "code"))
#
df = left_join(pop_df, department[, 1:7], by = c("code"))
head(df)
head(pop_df)
department[, 1:7]
# load department meta data
department = read.csv(paste0(path_meta, "department.csv"), stringsAsFactors = F)
#
df = left_join(pop_df, department[, 1:7], by = c("code"))
head(df)
df = left_join(df, subway[, 4], by = c("date, subway_code"))
df = left_join(df, subway, by = c("date, subway_code"))
subway = subway %>% rename(station_no = station_code) %>%
select(date, station_code, arrival)
subway = subway %>% rename(station_no = station_code) %>%
select(-c(station_name))
subway = subway %>% rename(station_code = station_no) %>%
select(-c(station_name))
df = left_join(df, subway, by = c("date, subway_code"))
subway = subway %>% rename(subway_code = station_no) %>%
select(-c(station_name))
# load subway_data
subway = read.csv(paste0(path_res, "weekend_subway.csv"), stringsAsFactors = F)[, -1]
subway = subway %>% rename(subway_code = station_no) %>%
select(-c(station_name))
df = left_join(df, subway, by = c("date, subway_code"))
head(df)
head(subway)
df = inner_join(df, subway, by = c("date, subway_code"))
test = left_join(df, subway, by = "date")
test = left_join(df, subway, by = "subway_code")
inner_join(df, subway, by = c("date, subway_code"))
View(df$subway_code)
is.na(df$subway_code)
sum(is.na(df$subway_code))
devtools::install_version('textfeatures', version='0.2.0', repos='http://cran.us.r-project.org')
rm(list=ls())
devtools::install_version('textfeatures', version='0.2.0', repos='http://cran.us.r-project.org')
devtools::install_version('textfeatures', version='0.2.0', repos='http://cran.us.r-project.org')
library(data.table)
install.packages("data.table")
devtools::install_version('textfeatures', version='0.2.0', repos='http://cran.us.r-project.org')
library(dplyr)
path_meta = "~/GitRepo/Multicampus_semi/JH_working/data/"
path_res = "~/GitRepo/Multicampus_semi/JH_working/proc/"
# load pop_data
pop = read.csv(paste0(path_res, "local_pop_weekend.csv"), stringsAsFactors = F)[, -1]
pop$집계구 = as.factor(df$집계구)
pop[pop == "*"] = NA
pop[, 5:length(pop)] = as.integer(pop[, 5:length(pop)])
pop[, 5:length(pop)] = apply(pop[, 5:length(pop)], 2, as.integer)
pop_df = pop %>% group_by(date, 집계구) %>%
summarise(mean_pop = mean(총생활인구)) %>%
rename(code = 집계구)
# load department meta data
department = read.csv(paste0(path_meta, "department.csv"), stringsAsFactors = F)
# load subway_data
subway = read.csv(paste0(path_res, "weekend_subway.csv"), stringsAsFactors = F)[, -1]
subway = subway %>% rename(subway_code = station_no) %>%
select(-c(station_name))
#
df = left_join(pop_df, department[, 1:7], by = c("code"))
df = inner_join(df, subway, by = c("date, subway_code"))
devtools::install_version('textfeatures', version='0.2.0', repos='http://cran.us.r-project.org')
